/*
* generated by Xtext
*/
package arden.xtext.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import arden.xtext.ui.contentassist.AbstractArdenSyntaxProposalProvider;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class ArdenSyntaxProposalProvider extends AbstractArdenSyntaxProposalProvider {

	public void complete_title_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_title_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("title: ;;", context));
	}

	public void complete_institution_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_institution_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("institution: ;;", context));
	}

	public void complete_author_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_author_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("author: ;;", context));
	}
	
	public void complete_specialist_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_specialist_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("specialist: ;;", context));
	}
	
	public void complete_purpose_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_purpose_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("purpose: ;;", context));
	}
	
	public void complete_explanation_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_explanation_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("explanation: ;;", context));
	}
	
	public void complete_keywords_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_keywords_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("keywords: ;;", context));
	}
	
	public void complete_citations_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_citations_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("citations: ;;", context));
	}
	
	public void complete_links_slot(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_links_slot(model, ruleCall, context, acceptor);
		acceptor.accept(createCompletionProposal("links: ;;", context));
	}
}

/*
 * generated by Xtext 2.10.0
 */
package arden.plugin.editor.formatting2

import arden.plugin.editor.ardenSyntax.mlm
import arden.plugin.editor.ardenSyntax.mlms
import arden.plugin.editor.services.ArdenSyntaxGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class ArdenSyntaxFormatter extends AbstractFormatter2 {
	
	@Inject extension ArdenSyntaxGrammarAccess

	def dispatch void format(mlms mlms, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (mlm mlm : mlms.getMlms()) {
			mlm.format;
		}
	}

	def dispatch void format(mlm mlm, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		mlm.getMaintainance_category.format;
		mlm.getLibrary_category.format;
		mlm.getKnowledge_category.format;
	}
	
	// TODO: implement for maintenance_category, maintenance_body, library_category, library_body, knowledge_category, knowledge_body, mlmname_slot, data_slot, evoke_slot, logic_slot, action_slot, logic_block, logic_statement, logic_if_then_else2, logic_elseif, logic_assignment, identifier_becomes, identifier_or_object_ref, call_phrase, expr, expr_sort, expr_where, expr_range, expr_or, expr_and, expr_not, expr_comparison, expr_find_string, string_search_start, expr_string, substring_start, expr_plus, expr_times, expr_power, expr_function, expr_factor, expr_factor_atom, main_comp_op, temporal_comp_op, in_comp_op, data_block, data_statement, data_if_then_else2, data_elseif, data_assignment, data_var_list, data_assign_phrase, read_phrase, read_where, object_attribute_list, new_object_phrase, evoke_block, evoke_statement, event_list, event_or, event_any, event_factor, evoke_time, qualified_evoke_cycle, simple_evoke_cycle, action_block, action_statement, action_if_then_else2, action_elseif
}

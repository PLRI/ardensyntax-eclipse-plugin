/*
 * generated by Xtext 2.10.0
 */
package arden.plugin.editor.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ide.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.editor.folding.IFoldingRegionProvider;
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.templates.DefaultTemplateProposalProvider;
import org.eclipse.xtext.ui.editor.templates.XtextTemplateContextType;
import org.eclipse.xtext.ui.wizard.IProjectCreator;

import com.google.inject.Binder;

import arden.plugin.editor.ui.folding.ArdenSyntaxFoldingRegionProvider;
import arden.plugin.editor.ui.syntaxcoloring.ArdenSyntaxAntlrTokenToAttributeIdMapper;
import arden.plugin.editor.ui.syntaxcoloring.ArdenSyntaxHighlightingConfiguration;
import arden.plugin.editor.ui.syntaxcoloring.ArdenSyntaxSemanticHighlightingCalculator;
import arden.plugin.editor.ui.templates.ArdenSyntaxTemplateContextType;
import arden.plugin.editor.ui.templates.ArdenSyntaxTemplateProposalProvider;
import arden.plugin.editor.ui.wizard.ArdenSyntaxProjectCreator;

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
public class ArdenSyntaxUiModule extends AbstractArdenSyntaxUiModule {

	public ArdenSyntaxUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
    @Override
    public void configure(Binder binder) {
        super.configure(binder);
        binder.bind(XtextTemplateContextType.class).to(ArdenSyntaxTemplateContextType.class);
    }
	
    public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
        return ArdenSyntaxSemanticHighlightingCalculator.class;
    }

    public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
        return ArdenSyntaxHighlightingConfiguration.class;
    }

    public Class<? extends IFoldingRegionProvider> bindIFoldingRegionProvider() {
        return ArdenSyntaxFoldingRegionProvider.class;
    }
    
    public Class<? extends AbstractAntlrTokenToAttributeIdMapper> bindAbstractAntlrTokenToAttributeIdMapper() {
    	return ArdenSyntaxAntlrTokenToAttributeIdMapper.class ;
    }
    
	public Class<? extends IProjectCreator> bindIProjectCreator() {
		return ArdenSyntaxProjectCreator.class;
	}
	
	public Class<? extends DefaultTemplateProposalProvider> bindDefaultTemplateProposalProvider() {
		return ArdenSyntaxTemplateProposalProvider.class;
	}
}
